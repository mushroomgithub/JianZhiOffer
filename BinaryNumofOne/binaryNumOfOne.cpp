#include<iostream>
using namespace std;
/***************************************************************************************
/*		Author:		mushroom
/*		Note:   求一个输入整数二进制表示中1的个数
/*					分两种情况，即最后一位是1和最后一位不是1；
/*					假设最后一位是1，减去1之后，最后一位变成0，其他
/*					所有位都保持不变，相当于做了一步取反操作，由1变成了0；
/*					最后一位不是1的情况也是类似，假如二进制表示的数的第m为是1，
/*					减去1之后，则第m位之前的所有位都变成了1，其他位保持不变，此时
/*					做n=n&(n-1);也是相当于做了一步取反操作。我们可以给一个count计数器，
/*					每做一步取反操作，如果n不为0,count就加1，只到n=0为止，此时count的值就是
/*					二进制表示数中1的总共的个数。
***************************************************************************************************/
int BinaryNumOfOne(int n)
{
	int count=0;
	while(n)
	{
		n&=(n-1);
		count++;
	}
	return count;
}

int main(int argc,char** argv)
{
	int n;
	while(cin>>n)
	{
		if(-32768==n) break;
		int Num=BinaryNumOfOne(n);
		cout<<"输入整数"<<n<<"二进制表示中1的个数是："<<Num<<endl;
	}

	system("pause");
	return 0;
}